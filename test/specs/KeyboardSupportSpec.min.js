describe("Keyboard Support Tests",function(){var g,d,b,f,e=0,c=10,a=1,h=5;describe("Clicking on slider handle automatically gives it focus",function(){beforeEach(function(){g=$("#testSlider1").slider({id:"testSlider"});d=$("#testSlider").find(".slider-track > .slider-handle:first")});it("clicking on handle1 gives focus to handle1",function(){var i=false;d.focus(function(){i=true;expect(i).toBeTruthy()});d.mousedown()})});describe("When slider handle has TAB focus",function(){it("should display it's tooltip if 'tooltip' option is set to 'show'",function(){g=$("#testSlider1").slider({id:"testSlider",tooltip:"show"});d=$("#testSlider").find(".slider-track > .slider-handle:first");var i=$("#testSlider").find("div.tooltip").hasClass("in");expect(i).toBeFalsy();d.focus();i=$("#testSlider").find("div.tooltip").hasClass("in");expect(i).toBeTruthy()});it("should not display it's tooltip if 'tooltip' option is set to 'hide'",function(){g=$("#testSlider1").slider({id:"testSlider",tooltip:"hide"});d=$("#testSlider").find(".slider-track > .slider-handle:first");var i=$("#testSlider").children("div.tooltip").hasClass("hide");expect(i).toBeTruthy();d.focus();i=$("#testSlider").children("div.tooltip").hasClass("hide");expect(i).toBeTruthy()});it("should not affect the tooltip display if 'tooltip' option is set to 'always'",function(){g=$("#testSlider1").slider({id:"testSlider",tooltip:"always"});d=$("#testSlider").find(".slider-track > .slider-handle:first");var j=$("#testSlider").children("div.tooltip");var i=j.hasClass("in");expect(i).toBeTruthy();d.focus();i=j.hasClass("in");expect(i).toBeTruthy()})});describe("For horizontal sliders where its handle has focus",function(){beforeEach(function(){g=$("#testSlider1").slider({id:"testSlider",orientation:"horizontal",min:e,max:c,step:a,value:h});d=$("#testSlider .min-slider-handle");d.focus();f=document.createEvent("Events");f.initEvent("keydown",true,true)});it("moves to the left by the 'step' value when the LEFT arrow key is pressed",function(){d.on("keydown",function(){var j=$("#testSlider1").slider("getValue");var i=h-a;expect(j).toBe(i)});f.keyCode=f.which=37;d[0].dispatchEvent(f)});it("moves to the right by the 'step' value when the RIGHT arrow key is pressed",function(){d.on("keydown",function(){var j=$("#testSlider1").slider("getValue");var i=h+a;expect(j).toBe(i)});f.keyCode=f.which=39;d[0].dispatchEvent(f)});it("moves to the left by the 'step' value when the DOWN arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h-a;expect(j).toBe(i)});f.keyCode=f.which=40;d[0].dispatchEvent(f)});it("moves to the right by the 'step' value when the UP arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h+a;expect(j).toBe(i)});f.keyCode=f.which=38;d[0].dispatchEvent(f)})});describe("For vertical sliders where its handle has focus",function(){beforeEach(function(){g=$("#testSlider1").slider({id:"testSlider",orientation:"vertical",min:e,max:c,step:a,value:h});d=$("#testSlider").find(".slider-track > .slider-handle:first");d.focus()});it("moves down by the 'step' value when the LEFT arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h-a;expect(j).toBe(i)});f.keyCode=f.which=37;d[0].dispatchEvent(f)});it("moves up by the 'step' value when the RIGHT arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h+a;expect(j).toBe(i)});f.keyCode=f.which=39;d[0].dispatchEvent(f)});it("moves down by the 'step' value when the DOWN arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h-a;expect(j).toBe(i)});f.keyCode=f.which=40;d[0].dispatchEvent(f)});it("moves up by the 'step' value when the UP arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h+a;expect(j).toBe(i)});f.keyCode=f.which=38;d[0].dispatchEvent(f)})});describe("For a reversed slider (regardless of 'orientation')",function(){beforeEach(function(){g=$("#testSlider1").slider({id:"testSlider",reversed:true,min:e,max:c,step:a,value:h});d=$("#testSlider").find(".slider-track > .slider-handle:first");d.focus()});it("moves to the left by the 'step' value when the LEFT arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h-a;expect(j).toBe(i)});f.keyCode=f.which=37;d[0].dispatchEvent(f)});it("moves to the right by the 'step' value when the RIGHT arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h+a;expect(j).toBe(i)});f.keyCode=f.which=39;d[0].dispatchEvent(f)});it("moves to the left by the 'step' value when the DOWN arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h-a;expect(j).toBe(i)});f.keyCode=f.which=40;d[0].dispatchEvent(f)});it("moves to the right by the 'step' value when the UP arrow key is pressed",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h+a;expect(j).toBe(i)});f.keyCode=f.which=38;d[0].dispatchEvent(f)})});describe("For a range slider (regardless of 'orientation')",function(){beforeEach(function(){g=$("#testSlider1").slider({id:"testSlider",min:e,max:c,step:a,value:[h,h]})});describe("when handle1 tries to overtake handle2 from the left",function(){beforeEach(function(){d=$("#testSlider").find(".slider-track > .slider-handle:first");d.focus()});it("handle2 moves to the right by the step value",function(){d.on("keydown",function(){var j=g.slider("getValue");var i=h+a;expect(j[1]).toBe(i)});f.keyCode=f.which=39;d[0].dispatchEvent(f)});it("handle1's value remains unchanged",function(){var i=g.slider("getValue");d.on("keydown",function(){expect(i[0]).toBe(h)});f.keyCode=f.which=39;d[0].dispatchEvent(f)})});describe("when handle2 tries to overtake handle1 from the right",function(){beforeEach(function(){b=$("#testSlider").find(".slider-track > .slider-handle:eq( 1 )");b.focus()});it("handle1 moves to the left by the step value",function(){b.on("keydown",function(){var j=g.slider("getValue");var i=h-a;expect(j[0]).toBe(i)});f.keyCode=f.which=37;d[0].dispatchEvent(f)});it("handle2's value remains unchanged",function(){var i=g.slider("getValue");b.on("keydown",function(){expect(i[1]).toBe(h)});f.keyCode=f.which=37;d[0].dispatchEvent(f)})})});describe("For the natural arrow keys",function(){var i=[{reversed:false,keyEvent:37,expectedSliderValue:h-a,orientation:"horizontal",key:"left"},{reversed:true,keyEvent:37,expectedSliderValue:h+a,orientation:"horizontal",key:"left"},{reversed:false,keyEvent:39,expectedSliderValue:h+a,orientation:"horizontal",key:"right"},{reversed:true,keyEvent:39,expectedSliderValue:h-a,orientation:"horizontal",key:"right"},{reversed:false,keyEvent:38,expectedSliderValue:h-a,orientation:"vertical",key:"up"},{reversed:true,keyEvent:38,expectedSliderValue:h+a,orientation:"vertical",key:"up"},{reversed:false,keyEvent:40,expectedSliderValue:h+a,orientation:"vertical",key:"down"},{reversed:true,keyEvent:40,expectedSliderValue:h-a,orientation:"vertical",key:"down"}];i.forEach(function(j){describe("A"+((j.reversed)?" reversed":"")+j.orientation+" slider is used for the arrow keys",function(){beforeEach(function(){g=$("#testSlider1").slider({id:"testSlider",min:e,max:c,step:a,value:h,natural_arrow_keys:true,reversed:j.reversed,orientation:j.orientation});d=$("#testSlider").find(".slider-track > .slider-handle:first");d.focus()});it("moves to the "+j.key+" by the 'step' value when the "+j.key+" arrow key is pressed",function(){d.on("keydown",function(){var l=g.slider("getValue");var k=j.expectedSliderValue;expect(l).toBe(k)});f.keyCode=f.which=j.keyEvent;d[0].dispatchEvent(f)})})})});afterEach(function(){if(g){g.slider("destroy")}})});